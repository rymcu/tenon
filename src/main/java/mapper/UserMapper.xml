<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rymcu.tenon.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.rymcu.tenon.entity.User">
        <id column="id" property="idUser"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="real_name" property="realName"/>
        <result column="avatar" property="avatar"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="status" property="status"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="last_online_time" property="lastOnlineTime"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>
    <resultMap id="UserInfoMap" type="com.rymcu.tenon.model.UserInfo">
        <id column="id" property="idUser"/>
        <result column="account" property="account"/>
        <result column="nickname" property="nickname"/>
        <result column="avatar" property="avatarUrl"/>
        <result column="email" property="email"/>
        <result column="status" property="status"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="last_online_time" property="lastOnlineTime"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>
    <insert id="insertUserRole">
        insert into tenon_user_role (id_tenon_user, id_tenon_role) VALUES (#{idUser}, #{idRole})
    </insert>
    <update id="updateLastOnlineTimeByAccount">
        update tenon_user set last_online_time = sysdate() where account = #{account}
    </update>
    <update id="updateLastLoginTime">
        update tenon_user set last_login_time = sysdate() where id = #{idUser}
    </update>
    <update id="updatePasswordByEmail">
        update tenon_user set password = #{password} where email = #{email}
    </update>
    <delete id="deleteUserRole">
        delete from tenon_user_role where id_tenon_user = #{idUser}
    </delete>
    <select id="selectByAccount" resultMap="BaseResultMap">
        select id,
               nickname,
               account,
               password,
               status,
               avatar,
               email
        from tenon_user
        where (account = #{account} or email = #{account})
          and status = 1
    </select>
    <select id="selectCountByNickname" resultType="java.lang.Integer">
        select count(0) from tenon_user where nickname = #{nickname}
    </select>
    <select id="selectMaxAccount" resultType="java.lang.String">
        select max(account) from tenon_user
    </select>
    <select id="selectUsers" resultMap="UserInfoMap">
        select id,
        nickname,
        account,
        status,
        avatar,
        email,
        last_login_time,
        last_online_time,
        created_time
        from tenon_user
        <trim prefix="where" prefixOverrides="and">
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="startDate != null and startDate != ''">
                and created_time between str_to_date(#{startDate}, '%Y-%m-%d') and str_to_date(#{endDate}, '%Y-%m-%d') +
                interval 1 day
            </if>
        </trim>
        <if test="sort != null and sort != ''">
            order by #{sort}
            <if test="order != null and order != ''">
                #{order}
            </if>
        </if>
    </select>
    <select id="selectUserInfoById" resultMap="UserInfoMap">
        select id,
               nickname,
               account,
               status,
               avatar,
               email,
               last_login_time,
               last_online_time,
               created_time
        from tenon_user
        where id = #{idUser}
    </select>
</mapper>
